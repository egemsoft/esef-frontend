"use strict";angular.module("esef.frontend",["esef.frontend.storage","esef.frontend.pagination","esef.frontend.refresh","esef.frontend.filters"]),angular.module("esef.frontend.filters",[]),angular.module("esef.frontend.filters").filter("titlecase",function(){return function(a){var b;return(null===a||void 0===a)&&(a=""),b=a.toString().toLocaleLowerCase(),b[0].toLocaleUpperCase().concat(b.substr(1,b.length-1))}}),angular.module("esef.frontend.pagination",[]),angular.module("esef.frontend.pagination").factory("pagination",function(){return{getFixedOffset:function(a,b,c){return a+b>c?c-b:a},getNumberOfPages:function(a,b){var c;return c=Math.ceil(b/a),0===c&&c++,c},getCurrentPage:function(a,b,c){var d;return d=a/b+1,d>c?c:d},getPages:function(a,b,c){var d,e,f,g,h;for(f=1,d=b,c+1>a?c=c+(c-a)+1:c+1>b-a&&(c+=c-(b-a)),a-c>0&&(f=a-c),b>a+c&&(d=a+c),h=[],e=g=f;d>=f?d>=g:g>=d;e=d>=f?++g:--g)h.push(e);return h}}}),angular.module("esef.frontend.refresh",[]),angular.module("esef.frontend.refresh").factory("refresh",["$timeout",function(a){var b,c,d,e;return d=null,c=1e4,e=!1,b=function(e){return d=a(function(){return b(e)},c),console.debug("Auto refresh triggered."),e()},{setInterval:function(a){return c=a,this},start:function(a){return e?console.debug("Refresh is already started."):(e=!0,console.debug("Starting refresh."),b(a)),this},stop:function(){return e?(e=!1,a.cancel(d),console.debug("Stopped refreshing.")):console.debug("Can't stop, already stopped refreshing."),this},isStarted:function(){return e},isStopped:function(){return!e}}}]),angular.module("esef.frontend.storage",[]),angular.module("esef.frontend.storage").factory("storage",function(){var a,b;return b={},a=[],{store:function(a,c){return b[a]=angular.copy(c),this.notifyObservers(),this},setProperty:function(a,c,d){return b[a][c]=angular.copy(d),this.notifyObservers(),this},removeProperty:function(a,c){return delete b[a][c],this.notifyObservers(),this},set:function(a){return b=angular.copy(a),this.notifyObservers(),this},get:function(a){return angular.copy(b[a])},registerObserverCallback:function(b){return a.push(b),this},notifyObservers:function(){return angular.forEach(a,function(a){return a()}),this}}});